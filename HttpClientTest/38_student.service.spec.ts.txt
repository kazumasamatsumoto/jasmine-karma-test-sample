import { TestBed } from "@angular/core/testing";

import { StudentService } from "./student.service";
import {
  HttpClientTestingModule,
  HttpTestingController,
} from "@angular/common/http/testing";

import { FormBuilder, FormsModule, ReactiveFormsModule } from "@angular/forms";
import { HttpClient, HttpClientModule } from "@angular/common/http";
import { PostModel } from "../PostModel";

describe("StudentService", () => {
  let service: StudentService;
  let httpclient: HttpClient;
  let httptestcontrol: HttpTestingController;
  beforeEach(async () => {
    await TestBed.configureTestingModule({
      imports: [
        FormsModule,
        ReactiveFormsModule,
        HttpClientModule,
        HttpClientTestingModule,
      ],
      providers: [StudentService],
    }).compileComponents();
  });

  beforeEach(() => {
    TestBed.configureTestingModule({});
    service = TestBed.inject(StudentService);

    httptestcontrol = TestBed.inject(HttpTestingController);
  });

  it("httpclinet get method", () => {
    const testpost: PostModel[] = [
      { id: 1, userId: 1, title: "title 1", body: "body1" },
      { id: 2, userId: 2, title: "title 2", body: "body2" },
    ];

    service.getListOfData().subscribe((posts) => {
      expect(testpost).toBe(posts, "should check mocked data");
    });

    const req = httptestcontrol.expectOne(service.jsonUrl + "posts");
    expect(req.cancelled).toBeFalsy();
    expect(req.request.responseType).toEqual("json");

    req.flush(testpost);
    httptestcontrol.verify();
  });

  it("httpclinet post method", () => {
    const testpost: PostModel = {
      id: 1,
      userId: 1,
      title: "title 1",
      body: "body1",
    };

    service.PostListOfData(testpost).subscribe((posts) => {
      expect(testpost).toBe(testpost);
    });

    const req = httptestcontrol.expectOne(service.jsonUrl + "posts");
    expect(req.cancelled).toBeFalsy();
    expect(req.request.responseType).toEqual("json");

    req.flush(testpost);
    httptestcontrol.verify();
  });
});
